        0144. Binary Tree Preorder Traversal

Given the root of a binary tree, return the preorder traversal of its nodes' values.

SOURCE CODE:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
  void preorderHelper(struct TreeNode* root, int* arr, int* idx) {
    if (root == NULL) return;
    arr[(*idx)++] = root->val;
    preorderHelper(root->left, arr, idx);
    preorderHelper(root->right, arr, idx); 
}
int* preorderTraversal(struct TreeNode* root, int* returnSize) {
     int* result = (int*)malloc(sizeof(int) * 100);
    *returnSize = 0;
    preorderHelper(root, result, returnSize);
    return result;
}

OUTPUT:

xample 1:

Input: root = [1,null,2,3]

Output: [1,2,3]

Explanation:



Example 2:

Input: root = [1,2,3,4,5,null,8,null,null,6,7,9]

Output: [1,2,4,5,6,7,3,8,9]

Explanation:



Example 3:

Input: root = []

Output: []

Example 4:

Input: root = [1]

Output: [1]

 
