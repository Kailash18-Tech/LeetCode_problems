                   0108. Convert Sorted Array to Binary Search Tree

Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.

SOURCE CODE:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* createBST(int arr[], int low, int high) {
    if (low > high)
        return NULL;

    int mid = low + (high - low) / 2;

    struct TreeNode* node = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    node->val = arr[mid];
    node->left = createBST(arr, low, mid - 1);
    node->right = createBST(arr, mid + 1, high);

    return node;
}

struct TreeNode* sortedArrayToBST(int* nums, int n) {
    struct TreeNode* root = createBST(nums, 0, n - 1);
    return root;
}

OUTPUT:

 

Example 1:


Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:

Example 2:


Input: nums = [1,3]
Output: [3,1]
Explanation: [1,null,3] and [3,1] are both height-balanced BSTs.
 
