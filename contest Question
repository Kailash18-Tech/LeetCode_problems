Q1. Trionic Array I
Solved
Easy
3 pt.
You are given an integer array nums of length n.

An array is trionic if there exist indices 0 < p < q < n − 1 such that:

nums[0...p] is strictly increasing,
nums[p...q] is strictly decreasing,
nums[q...n − 1] is strictly increasing.
Return true if nums is trionic, otherwise return false.

  SOURCE CODE:
bool isTrionic(int* nums, int numsSize) {
    if(numsSize<3)
        return false;
    int i=0;

    while(i+1<numsSize&&nums[i]<nums[i+1])
    {
        i++;
    }
    if(i==0||i==numsSize-1)
        return false;

    int p=i;

    while(i+1<numsSize&&nums[i]>nums[i+1])
    {
        i++;
    }

    if(i==p||i==numsSize-1)
        return false;
     int q=i;

    while(i+1<numsSize&&nums[i]<nums[i+1])
    {
        i++;
    }
    return i==numsSize-1;
}


Q2. Maximum Balanced Shipments
Solved
Medium
5 pt.
You are given an integer array weight of length n, representing the weights of n parcels arranged in a straight line. A shipment is defined as a contiguous subarray of parcels. A shipment is considered balanced if the weight of the last parcel is strictly less than the maximum weight among all parcels in that shipment.

Select a set of non-overlapping, contiguous, balanced shipments such that each parcel appears in at most one shipment (parcels may remain unshipped).

Return the maximum possible number of balanced shipments that can be formed.

SOURCE CODE:

int maxBalancedShipments(int* weight, int weightSize) {

    int count=0;
    int i=0;

    while(i < weightSize)
    {
        int maxVal=weight[i];
        int j=i;

        while(j<weightSize)
        { 
            if(weight[j]>maxVal){
                maxVal=weight[j];
            }
            if(weight[j]<maxVal){

                count++;
                j++;
                break;
            }
            j++;
        }
        if(j>i)
         i=j;
        else
            i++;
    }
    
    return count;
}
